#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DBS_GUI
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Unternehm")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAbteilung(Abteilung instance);
    partial void UpdateAbteilung(Abteilung instance);
    partial void DeleteAbteilung(Abteilung instance);
    partial void InsertAngestellte(Angestellte instance);
    partial void UpdateAngestellte(Angestellte instance);
    partial void DeleteAngestellte(Angestellte instance);
    partial void InsertBestellung(Bestellung instance);
    partial void UpdateBestellung(Bestellung instance);
    partial void DeleteBestellung(Bestellung instance);
    partial void InsertKunde(Kunde instance);
    partial void UpdateKunde(Kunde instance);
    partial void DeleteKunde(Kunde instance);
    partial void InsertNiederlassung(Niederlassung instance);
    partial void UpdateNiederlassung(Niederlassung instance);
    partial void DeleteNiederlassung(Niederlassung instance);
    partial void InsertProjekt(Projekt instance);
    partial void UpdateProjekt(Projekt instance);
    partial void DeleteProjekt(Projekt instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::DBS_GUI.Properties.Settings.Default.UnternehmConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Abteilung> Abteilungs
		{
			get
			{
				return this.GetTable<Abteilung>();
			}
		}
		
		public System.Data.Linq.Table<Angestellte> Angestelltes
		{
			get
			{
				return this.GetTable<Angestellte>();
			}
		}
		
		public System.Data.Linq.Table<Bestellung> Bestellungs
		{
			get
			{
				return this.GetTable<Bestellung>();
			}
		}
		
		public System.Data.Linq.Table<Kunde> Kundes
		{
			get
			{
				return this.GetTable<Kunde>();
			}
		}
		
		public System.Data.Linq.Table<Niederlassung> Niederlassungs
		{
			get
			{
				return this.GetTable<Niederlassung>();
			}
		}
		
		public System.Data.Linq.Table<Pro_Ang> Pro_Angs
		{
			get
			{
				return this.GetTable<Pro_Ang>();
			}
		}
		
		public System.Data.Linq.Table<Projekt> Projekts
		{
			get
			{
				return this.GetTable<Projekt>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Abteilung")]
	public partial class Abteilung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PK_Abt_nr;
		
		private string _Name;
		
		private System.Nullable<int> _Anzahl_Angestellte;
		
		private string _Email;
		
		private string _Telefon;
		
		private EntitySet<Angestellte> _Angestelltes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPK_Abt_nrChanging(int value);
    partial void OnPK_Abt_nrChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAnzahl_AngestellteChanging(System.Nullable<int> value);
    partial void OnAnzahl_AngestellteChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnTelefonChanging(string value);
    partial void OnTelefonChanged();
    #endregion
		
		public Abteilung()
		{
			this._Angestelltes = new EntitySet<Angestellte>(new Action<Angestellte>(this.attach_Angestelltes), new Action<Angestellte>(this.detach_Angestelltes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PK_Abt_nr", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PK_Abt_nr
		{
			get
			{
				return this._PK_Abt_nr;
			}
			set
			{
				if ((this._PK_Abt_nr != value))
				{
					this.OnPK_Abt_nrChanging(value);
					this.SendPropertyChanging();
					this._PK_Abt_nr = value;
					this.SendPropertyChanged("PK_Abt_nr");
					this.OnPK_Abt_nrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anzahl_Angestellte", DbType="Int")]
		public System.Nullable<int> Anzahl_Angestellte
		{
			get
			{
				return this._Anzahl_Angestellte;
			}
			set
			{
				if ((this._Anzahl_Angestellte != value))
				{
					this.OnAnzahl_AngestellteChanging(value);
					this.SendPropertyChanging();
					this._Anzahl_Angestellte = value;
					this.SendPropertyChanged("Anzahl_Angestellte");
					this.OnAnzahl_AngestellteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefon", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string Telefon
		{
			get
			{
				return this._Telefon;
			}
			set
			{
				if ((this._Telefon != value))
				{
					this.OnTelefonChanging(value);
					this.SendPropertyChanging();
					this._Telefon = value;
					this.SendPropertyChanged("Telefon");
					this.OnTelefonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Abteilung_Angestellte", Storage="_Angestelltes", ThisKey="PK_Abt_nr", OtherKey="Abt_nr")]
		public EntitySet<Angestellte> Angestelltes
		{
			get
			{
				return this._Angestelltes;
			}
			set
			{
				this._Angestelltes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Angestelltes(Angestellte entity)
		{
			this.SendPropertyChanging();
			entity.Abteilung = this;
		}
		
		private void detach_Angestelltes(Angestellte entity)
		{
			this.SendPropertyChanging();
			entity.Abteilung = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Angestellte")]
	public partial class Angestellte : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PK_AngID;
		
		private string _Sex;
		
		private string _Vorname;
		
		private string _Nachname;
		
		private string _Email;
		
		private int _Gehalt;
		
		private System.Nullable<int> _FirmaID;
		
		private System.Nullable<int> _Abt_nr;
		
		private EntityRef<Abteilung> _Abteilung;
		
		private EntityRef<Niederlassung> _Niederlassung;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPK_AngIDChanging(int value);
    partial void OnPK_AngIDChanged();
    partial void OnSexChanging(string value);
    partial void OnSexChanged();
    partial void OnVornameChanging(string value);
    partial void OnVornameChanged();
    partial void OnNachnameChanging(string value);
    partial void OnNachnameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnGehaltChanging(int value);
    partial void OnGehaltChanged();
    partial void OnFirmaIDChanging(System.Nullable<int> value);
    partial void OnFirmaIDChanged();
    partial void OnAbt_nrChanging(System.Nullable<int> value);
    partial void OnAbt_nrChanged();
    #endregion
		
		public Angestellte()
		{
			this._Abteilung = default(EntityRef<Abteilung>);
			this._Niederlassung = default(EntityRef<Niederlassung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PK_AngID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PK_AngID
		{
			get
			{
				return this._PK_AngID;
			}
			set
			{
				if ((this._PK_AngID != value))
				{
					this.OnPK_AngIDChanging(value);
					this.SendPropertyChanging();
					this._PK_AngID = value;
					this.SendPropertyChanged("PK_AngID");
					this.OnPK_AngIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="VarChar(1)")]
		public string Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vorname", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string Vorname
		{
			get
			{
				return this._Vorname;
			}
			set
			{
				if ((this._Vorname != value))
				{
					this.OnVornameChanging(value);
					this.SendPropertyChanging();
					this._Vorname = value;
					this.SendPropertyChanged("Vorname");
					this.OnVornameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nachname", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string Nachname
		{
			get
			{
				return this._Nachname;
			}
			set
			{
				if ((this._Nachname != value))
				{
					this.OnNachnameChanging(value);
					this.SendPropertyChanging();
					this._Nachname = value;
					this.SendPropertyChanged("Nachname");
					this.OnNachnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(128)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gehalt", DbType="Int NOT NULL")]
		public int Gehalt
		{
			get
			{
				return this._Gehalt;
			}
			set
			{
				if ((this._Gehalt != value))
				{
					this.OnGehaltChanging(value);
					this.SendPropertyChanging();
					this._Gehalt = value;
					this.SendPropertyChanged("Gehalt");
					this.OnGehaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirmaID", DbType="Int")]
		public System.Nullable<int> FirmaID
		{
			get
			{
				return this._FirmaID;
			}
			set
			{
				if ((this._FirmaID != value))
				{
					if (this._Niederlassung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFirmaIDChanging(value);
					this.SendPropertyChanging();
					this._FirmaID = value;
					this.SendPropertyChanged("FirmaID");
					this.OnFirmaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abt_nr", DbType="Int")]
		public System.Nullable<int> Abt_nr
		{
			get
			{
				return this._Abt_nr;
			}
			set
			{
				if ((this._Abt_nr != value))
				{
					if (this._Abteilung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAbt_nrChanging(value);
					this.SendPropertyChanging();
					this._Abt_nr = value;
					this.SendPropertyChanged("Abt_nr");
					this.OnAbt_nrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Abteilung_Angestellte", Storage="_Abteilung", ThisKey="Abt_nr", OtherKey="PK_Abt_nr", IsForeignKey=true)]
		public Abteilung Abteilung
		{
			get
			{
				return this._Abteilung.Entity;
			}
			set
			{
				Abteilung previousValue = this._Abteilung.Entity;
				if (((previousValue != value) 
							|| (this._Abteilung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Abteilung.Entity = null;
						previousValue.Angestelltes.Remove(this);
					}
					this._Abteilung.Entity = value;
					if ((value != null))
					{
						value.Angestelltes.Add(this);
						this._Abt_nr = value.PK_Abt_nr;
					}
					else
					{
						this._Abt_nr = default(Nullable<int>);
					}
					this.SendPropertyChanged("Abteilung");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Niederlassung_Angestellte", Storage="_Niederlassung", ThisKey="FirmaID", OtherKey="PK_FirmaID", IsForeignKey=true)]
		public Niederlassung Niederlassung
		{
			get
			{
				return this._Niederlassung.Entity;
			}
			set
			{
				Niederlassung previousValue = this._Niederlassung.Entity;
				if (((previousValue != value) 
							|| (this._Niederlassung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Niederlassung.Entity = null;
						previousValue.Angestelltes.Remove(this);
					}
					this._Niederlassung.Entity = value;
					if ((value != null))
					{
						value.Angestelltes.Add(this);
						this._FirmaID = value.PK_FirmaID;
					}
					else
					{
						this._FirmaID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Niederlassung");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bestellung")]
	public partial class Bestellung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BessID;
		
		private int _FK_Proj;
		
		private int _FK_Kunde;
		
		private System.DateTime _Datum;
		
		private int _Preis;
		
		private EntityRef<Kunde> _Kunde;
		
		private EntityRef<Projekt> _Projekt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBessIDChanging(int value);
    partial void OnBessIDChanged();
    partial void OnFK_ProjChanging(int value);
    partial void OnFK_ProjChanged();
    partial void OnFK_KundeChanging(int value);
    partial void OnFK_KundeChanged();
    partial void OnDatumChanging(System.DateTime value);
    partial void OnDatumChanged();
    partial void OnPreisChanging(int value);
    partial void OnPreisChanged();
    #endregion
		
		public Bestellung()
		{
			this._Kunde = default(EntityRef<Kunde>);
			this._Projekt = default(EntityRef<Projekt>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BessID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BessID
		{
			get
			{
				return this._BessID;
			}
			set
			{
				if ((this._BessID != value))
				{
					this.OnBessIDChanging(value);
					this.SendPropertyChanging();
					this._BessID = value;
					this.SendPropertyChanged("BessID");
					this.OnBessIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_Proj", DbType="Int NOT NULL")]
		public int FK_Proj
		{
			get
			{
				return this._FK_Proj;
			}
			set
			{
				if ((this._FK_Proj != value))
				{
					if (this._Projekt.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_ProjChanging(value);
					this.SendPropertyChanging();
					this._FK_Proj = value;
					this.SendPropertyChanged("FK_Proj");
					this.OnFK_ProjChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_Kunde", DbType="Int NOT NULL")]
		public int FK_Kunde
		{
			get
			{
				return this._FK_Kunde;
			}
			set
			{
				if ((this._FK_Kunde != value))
				{
					if (this._Kunde.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_KundeChanging(value);
					this.SendPropertyChanging();
					this._FK_Kunde = value;
					this.SendPropertyChanged("FK_Kunde");
					this.OnFK_KundeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Datum", DbType="DateTime2 NOT NULL")]
		public System.DateTime Datum
		{
			get
			{
				return this._Datum;
			}
			set
			{
				if ((this._Datum != value))
				{
					this.OnDatumChanging(value);
					this.SendPropertyChanging();
					this._Datum = value;
					this.SendPropertyChanged("Datum");
					this.OnDatumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Preis", DbType="Int NOT NULL")]
		public int Preis
		{
			get
			{
				return this._Preis;
			}
			set
			{
				if ((this._Preis != value))
				{
					this.OnPreisChanging(value);
					this.SendPropertyChanging();
					this._Preis = value;
					this.SendPropertyChanged("Preis");
					this.OnPreisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kunde_Bestellung", Storage="_Kunde", ThisKey="FK_Kunde", OtherKey="PK_KundID", IsForeignKey=true)]
		public Kunde Kunde
		{
			get
			{
				return this._Kunde.Entity;
			}
			set
			{
				Kunde previousValue = this._Kunde.Entity;
				if (((previousValue != value) 
							|| (this._Kunde.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kunde.Entity = null;
						previousValue.Bestellungs.Remove(this);
					}
					this._Kunde.Entity = value;
					if ((value != null))
					{
						value.Bestellungs.Add(this);
						this._FK_Kunde = value.PK_KundID;
					}
					else
					{
						this._FK_Kunde = default(int);
					}
					this.SendPropertyChanged("Kunde");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Projekt_Bestellung", Storage="_Projekt", ThisKey="FK_Proj", OtherKey="PK_Proj_nr", IsForeignKey=true)]
		public Projekt Projekt
		{
			get
			{
				return this._Projekt.Entity;
			}
			set
			{
				Projekt previousValue = this._Projekt.Entity;
				if (((previousValue != value) 
							|| (this._Projekt.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Projekt.Entity = null;
						previousValue.Bestellungs.Remove(this);
					}
					this._Projekt.Entity = value;
					if ((value != null))
					{
						value.Bestellungs.Add(this);
						this._FK_Proj = value.PK_Proj_nr;
					}
					else
					{
						this._FK_Proj = default(int);
					}
					this.SendPropertyChanged("Projekt");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kunde")]
	public partial class Kunde : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PK_KundID;
		
		private string _Vorname;
		
		private string _Nachname;
		
		private string _Sex;
		
		private string _Adresse;
		
		private string _City;
		
		private string _Telefon;
		
		private string _Email;
		
		private EntitySet<Bestellung> _Bestellungs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPK_KundIDChanging(int value);
    partial void OnPK_KundIDChanged();
    partial void OnVornameChanging(string value);
    partial void OnVornameChanged();
    partial void OnNachnameChanging(string value);
    partial void OnNachnameChanged();
    partial void OnSexChanging(string value);
    partial void OnSexChanged();
    partial void OnAdresseChanging(string value);
    partial void OnAdresseChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnTelefonChanging(string value);
    partial void OnTelefonChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public Kunde()
		{
			this._Bestellungs = new EntitySet<Bestellung>(new Action<Bestellung>(this.attach_Bestellungs), new Action<Bestellung>(this.detach_Bestellungs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PK_KundID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PK_KundID
		{
			get
			{
				return this._PK_KundID;
			}
			set
			{
				if ((this._PK_KundID != value))
				{
					this.OnPK_KundIDChanging(value);
					this.SendPropertyChanging();
					this._PK_KundID = value;
					this.SendPropertyChanged("PK_KundID");
					this.OnPK_KundIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vorname", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string Vorname
		{
			get
			{
				return this._Vorname;
			}
			set
			{
				if ((this._Vorname != value))
				{
					this.OnVornameChanging(value);
					this.SendPropertyChanging();
					this._Vorname = value;
					this.SendPropertyChanged("Vorname");
					this.OnVornameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nachname", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string Nachname
		{
			get
			{
				return this._Nachname;
			}
			set
			{
				if ((this._Nachname != value))
				{
					this.OnNachnameChanging(value);
					this.SendPropertyChanging();
					this._Nachname = value;
					this.SendPropertyChanged("Nachname");
					this.OnNachnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="VarChar(1)")]
		public string Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adresse", DbType="VarChar(128)")]
		public string Adresse
		{
			get
			{
				return this._Adresse;
			}
			set
			{
				if ((this._Adresse != value))
				{
					this.OnAdresseChanging(value);
					this.SendPropertyChanging();
					this._Adresse = value;
					this.SendPropertyChanged("Adresse");
					this.OnAdresseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefon", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string Telefon
		{
			get
			{
				return this._Telefon;
			}
			set
			{
				if ((this._Telefon != value))
				{
					this.OnTelefonChanging(value);
					this.SendPropertyChanging();
					this._Telefon = value;
					this.SendPropertyChanged("Telefon");
					this.OnTelefonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kunde_Bestellung", Storage="_Bestellungs", ThisKey="PK_KundID", OtherKey="FK_Kunde")]
		public EntitySet<Bestellung> Bestellungs
		{
			get
			{
				return this._Bestellungs;
			}
			set
			{
				this._Bestellungs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bestellungs(Bestellung entity)
		{
			this.SendPropertyChanging();
			entity.Kunde = this;
		}
		
		private void detach_Bestellungs(Bestellung entity)
		{
			this.SendPropertyChanging();
			entity.Kunde = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Niederlassung")]
	public partial class Niederlassung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PK_FirmaID;
		
		private string _Ort;
		
		private string _Telefon;
		
		private string _Email;
		
		private EntitySet<Angestellte> _Angestelltes;
		
		private EntitySet<Projekt> _Projekts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPK_FirmaIDChanging(int value);
    partial void OnPK_FirmaIDChanged();
    partial void OnOrtChanging(string value);
    partial void OnOrtChanged();
    partial void OnTelefonChanging(string value);
    partial void OnTelefonChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public Niederlassung()
		{
			this._Angestelltes = new EntitySet<Angestellte>(new Action<Angestellte>(this.attach_Angestelltes), new Action<Angestellte>(this.detach_Angestelltes));
			this._Projekts = new EntitySet<Projekt>(new Action<Projekt>(this.attach_Projekts), new Action<Projekt>(this.detach_Projekts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PK_FirmaID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PK_FirmaID
		{
			get
			{
				return this._PK_FirmaID;
			}
			set
			{
				if ((this._PK_FirmaID != value))
				{
					this.OnPK_FirmaIDChanging(value);
					this.SendPropertyChanging();
					this._PK_FirmaID = value;
					this.SendPropertyChanged("PK_FirmaID");
					this.OnPK_FirmaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ort", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string Ort
		{
			get
			{
				return this._Ort;
			}
			set
			{
				if ((this._Ort != value))
				{
					this.OnOrtChanging(value);
					this.SendPropertyChanging();
					this._Ort = value;
					this.SendPropertyChanged("Ort");
					this.OnOrtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefon", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string Telefon
		{
			get
			{
				return this._Telefon;
			}
			set
			{
				if ((this._Telefon != value))
				{
					this.OnTelefonChanging(value);
					this.SendPropertyChanging();
					this._Telefon = value;
					this.SendPropertyChanged("Telefon");
					this.OnTelefonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Niederlassung_Angestellte", Storage="_Angestelltes", ThisKey="PK_FirmaID", OtherKey="FirmaID")]
		public EntitySet<Angestellte> Angestelltes
		{
			get
			{
				return this._Angestelltes;
			}
			set
			{
				this._Angestelltes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Niederlassung_Projekt", Storage="_Projekts", ThisKey="PK_FirmaID", OtherKey="FK_Nder_nr")]
		public EntitySet<Projekt> Projekts
		{
			get
			{
				return this._Projekts;
			}
			set
			{
				this._Projekts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Angestelltes(Angestellte entity)
		{
			this.SendPropertyChanging();
			entity.Niederlassung = this;
		}
		
		private void detach_Angestelltes(Angestellte entity)
		{
			this.SendPropertyChanging();
			entity.Niederlassung = null;
		}
		
		private void attach_Projekts(Projekt entity)
		{
			this.SendPropertyChanging();
			entity.Niederlassung = this;
		}
		
		private void detach_Projekts(Projekt entity)
		{
			this.SendPropertyChanging();
			entity.Niederlassung = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pro_Ang")]
	public partial class Pro_Ang
	{
		
		private System.Nullable<int> _FK_AngID;
		
		private System.Nullable<int> _FK_Proj_nr;
		
		public Pro_Ang()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_AngID", DbType="Int")]
		public System.Nullable<int> FK_AngID
		{
			get
			{
				return this._FK_AngID;
			}
			set
			{
				if ((this._FK_AngID != value))
				{
					this._FK_AngID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_Proj_nr", DbType="Int")]
		public System.Nullable<int> FK_Proj_nr
		{
			get
			{
				return this._FK_Proj_nr;
			}
			set
			{
				if ((this._FK_Proj_nr != value))
				{
					this._FK_Proj_nr = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Projekt")]
	public partial class Projekt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PK_Proj_nr;
		
		private string _Name;
		
		private System.DateTime _Start_Date;
		
		private System.Nullable<System.DateTime> _End_Date;
		
		private System.Nullable<int> _FK_Nder_nr;
		
		private EntitySet<Bestellung> _Bestellungs;
		
		private EntityRef<Niederlassung> _Niederlassung;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPK_Proj_nrChanging(int value);
    partial void OnPK_Proj_nrChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStart_DateChanging(System.DateTime value);
    partial void OnStart_DateChanged();
    partial void OnEnd_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnEnd_DateChanged();
    partial void OnFK_Nder_nrChanging(System.Nullable<int> value);
    partial void OnFK_Nder_nrChanged();
    #endregion
		
		public Projekt()
		{
			this._Bestellungs = new EntitySet<Bestellung>(new Action<Bestellung>(this.attach_Bestellungs), new Action<Bestellung>(this.detach_Bestellungs));
			this._Niederlassung = default(EntityRef<Niederlassung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PK_Proj_nr", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PK_Proj_nr
		{
			get
			{
				return this._PK_Proj_nr;
			}
			set
			{
				if ((this._PK_Proj_nr != value))
				{
					this.OnPK_Proj_nrChanging(value);
					this.SendPropertyChanging();
					this._PK_Proj_nr = value;
					this.SendPropertyChanged("PK_Proj_nr");
					this.OnPK_Proj_nrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Start_Date", DbType="DateTime2 NOT NULL")]
		public System.DateTime Start_Date
		{
			get
			{
				return this._Start_Date;
			}
			set
			{
				if ((this._Start_Date != value))
				{
					this.OnStart_DateChanging(value);
					this.SendPropertyChanging();
					this._Start_Date = value;
					this.SendPropertyChanged("Start_Date");
					this.OnStart_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_End_Date", DbType="DateTime2")]
		public System.Nullable<System.DateTime> End_Date
		{
			get
			{
				return this._End_Date;
			}
			set
			{
				if ((this._End_Date != value))
				{
					this.OnEnd_DateChanging(value);
					this.SendPropertyChanging();
					this._End_Date = value;
					this.SendPropertyChanged("End_Date");
					this.OnEnd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_Nder_nr", DbType="Int")]
		public System.Nullable<int> FK_Nder_nr
		{
			get
			{
				return this._FK_Nder_nr;
			}
			set
			{
				if ((this._FK_Nder_nr != value))
				{
					if (this._Niederlassung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_Nder_nrChanging(value);
					this.SendPropertyChanging();
					this._FK_Nder_nr = value;
					this.SendPropertyChanged("FK_Nder_nr");
					this.OnFK_Nder_nrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Projekt_Bestellung", Storage="_Bestellungs", ThisKey="PK_Proj_nr", OtherKey="FK_Proj")]
		public EntitySet<Bestellung> Bestellungs
		{
			get
			{
				return this._Bestellungs;
			}
			set
			{
				this._Bestellungs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Niederlassung_Projekt", Storage="_Niederlassung", ThisKey="FK_Nder_nr", OtherKey="PK_FirmaID", IsForeignKey=true)]
		public Niederlassung Niederlassung
		{
			get
			{
				return this._Niederlassung.Entity;
			}
			set
			{
				Niederlassung previousValue = this._Niederlassung.Entity;
				if (((previousValue != value) 
							|| (this._Niederlassung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Niederlassung.Entity = null;
						previousValue.Projekts.Remove(this);
					}
					this._Niederlassung.Entity = value;
					if ((value != null))
					{
						value.Projekts.Add(this);
						this._FK_Nder_nr = value.PK_FirmaID;
					}
					else
					{
						this._FK_Nder_nr = default(Nullable<int>);
					}
					this.SendPropertyChanged("Niederlassung");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bestellungs(Bestellung entity)
		{
			this.SendPropertyChanging();
			entity.Projekt = this;
		}
		
		private void detach_Bestellungs(Bestellung entity)
		{
			this.SendPropertyChanging();
			entity.Projekt = null;
		}
	}
}
#pragma warning restore 1591
